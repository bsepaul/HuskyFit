{"version":3,"names":["getDefaultHeaderHeight","getHeaderTitle","HeaderBackContext","HeaderHeightContext","HeaderShownContext","SafeAreaProviderCompat","NavigationContext","NavigationRouteContext","StackActions","usePreventRemoveContext","useTheme","React","Platform","StyleSheet","View","useSafeAreaFrame","useSafeAreaInsets","Screen","ScreenStack","warnOnce","useDismissedRouteError","useInvalidPreventRemoveError","DebugContainer","HeaderConfig","isAndroid","OS","MaybeNestedStack","options","route","presentation","headerHeight","headerTopInsetEnabled","children","colors","header","headerShown","contentStyle","isHeaderInModal","undefined","headerShownPreviousRef","useRef","useEffect","current","name","content","styles","container","backgroundColor","background","absoluteFill","SceneView","index","focused","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","navigation","render","animationDuration","animationTypeForReplace","gestureEnabled","headerBackButtonMenuEnabled","headerTransparent","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","frame","isModal","isIPhone","isPad","isTV","isLandscape","width","height","isParentHeaderShown","useContext","parentHeaderHeight","parentHeaderBack","topInset","top","preventedRoutes","defaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","useState","headerBack","title","isRemovePrevented","key","preventRemove","headerBackTitle","scene","e","nativeEvent","layout","absolute","back","NativeStackViewInner","state","descriptors","setNextDismissedKey","routes","map","isFocused","previousKey","nextKey","emit","type","data","closing","target","event","dispatch","pop","dismissCount","source","NativeStackView","props","create","flex","flexDirection","position","left","right"],"sources":["NativeStackView.native.tsx"],"sourcesContent":["import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"}