{"version":3,"names":["HeaderConfig","headerHeight","headerBackImageSource","headerBackButtonMenuEnabled","headerBackTitle","headerBackTitleStyle","headerBackTitleVisible","headerBackVisible","headerShadowVisible","headerLargeStyle","headerLargeTitle","headerLargeTitleShadowVisible","headerLargeTitleStyle","headerBackground","headerLeft","headerRight","headerShown","headerStyle","headerBlurEffect","headerTintColor","headerTitle","headerTitleAlign","headerTitleStyle","headerTransparent","headerSearchBarOptions","headerTopInsetEnabled","route","title","canGoBack","colors","useTheme","tintColor","Platform","OS","primary","text","headerBackTitleStyleFlattened","StyleSheet","flatten","headerLargeTitleStyleFlattened","headerTitleStyleFlattened","headerStyleFlattened","headerLargeStyleFlattened","backTitleFontFamily","largeTitleFontFamily","titleFontFamily","processFonts","fontFamily","titleText","getHeaderTitle","name","titleColor","color","titleFontSize","fontSize","titleFontWeight","fontWeight","headerTitleStyleSupported","headerLeftElement","label","headerRightElement","headerTitleElement","children","supportsHeaderSearchBar","isSearchBarAvailableForCurrentPlatform","SearchBar","hasHeaderSearchBar","Error","backButtonInCustomView","translucent","styles","background","height","backgroundColor","card","I18nManager","getConstants","isRTL","row","undefined","create","flexDirection","alignItems","position","top","left","right","zIndex","overflow"],"sources":["HeaderConfig.tsx"],"sourcesContent":["import { getHeaderTitle, HeaderTitle } from '@react-navigation/elements';\nimport { Route, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleSheet,\n  TextStyle,\n  View,\n} from 'react-native';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderConfig,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderSearchBarView,\n  SearchBar,\n} from 'react-native-screens';\n\nimport type { NativeStackNavigationOptions } from '../types';\nimport { processFonts } from './FontProcessor';\n\ntype Props = NativeStackNavigationOptions & {\n  headerTopInsetEnabled: boolean;\n  headerHeight: number;\n  route: Route<string>;\n  canGoBack: boolean;\n};\n\nexport default function HeaderConfig({\n  headerHeight,\n  headerBackImageSource,\n  headerBackButtonMenuEnabled,\n  headerBackTitle,\n  headerBackTitleStyle,\n  headerBackTitleVisible = true,\n  headerBackVisible,\n  headerShadowVisible,\n  headerLargeStyle,\n  headerLargeTitle,\n  headerLargeTitleShadowVisible,\n  headerLargeTitleStyle,\n  headerBackground,\n  headerLeft,\n  headerRight,\n  headerShown,\n  headerStyle,\n  headerBlurEffect,\n  headerTintColor,\n  headerTitle,\n  headerTitleAlign,\n  headerTitleStyle,\n  headerTransparent,\n  headerSearchBarOptions,\n  headerTopInsetEnabled,\n  route,\n  title,\n  canGoBack,\n}: Props): JSX.Element {\n  const { colors } = useTheme();\n  const tintColor =\n    headerTintColor ?? (Platform.OS === 'ios' ? colors.primary : colors.text);\n\n  const headerBackTitleStyleFlattened =\n    StyleSheet.flatten(headerBackTitleStyle) || {};\n  const headerLargeTitleStyleFlattened =\n    StyleSheet.flatten(headerLargeTitleStyle) || {};\n  const headerTitleStyleFlattened = StyleSheet.flatten(headerTitleStyle) || {};\n  const headerStyleFlattened = StyleSheet.flatten(headerStyle) || {};\n  const headerLargeStyleFlattened = StyleSheet.flatten(headerLargeStyle) || {};\n\n  const [backTitleFontFamily, largeTitleFontFamily, titleFontFamily] =\n    processFonts([\n      headerBackTitleStyleFlattened.fontFamily,\n      headerLargeTitleStyleFlattened.fontFamily,\n      headerTitleStyleFlattened.fontFamily,\n    ]);\n\n  const titleText = getHeaderTitle({ title, headerTitle }, route.name);\n  const titleColor =\n    headerTitleStyleFlattened.color ?? headerTintColor ?? colors.text;\n  const titleFontSize = headerTitleStyleFlattened.fontSize;\n  const titleFontWeight = headerTitleStyleFlattened.fontWeight;\n\n  const headerTitleStyleSupported: TextStyle = { color: titleColor };\n\n  if (headerTitleStyleFlattened.fontFamily != null) {\n    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;\n  }\n\n  if (titleFontSize != null) {\n    headerTitleStyleSupported.fontSize = titleFontSize;\n  }\n\n  if (titleFontWeight != null) {\n    headerTitleStyleSupported.fontWeight = titleFontWeight;\n  }\n\n  const headerLeftElement = headerLeft?.({\n    tintColor,\n    canGoBack,\n    label: headerBackTitle,\n  });\n  const headerRightElement = headerRight?.({\n    tintColor,\n    canGoBack,\n  });\n  const headerTitleElement =\n    typeof headerTitle === 'function'\n      ? headerTitle({\n          tintColor,\n          children: titleText,\n        })\n      : null;\n\n  const supportsHeaderSearchBar =\n    typeof isSearchBarAvailableForCurrentPlatform === 'boolean'\n      ? isSearchBarAvailableForCurrentPlatform\n      : // Fallback for older versions of react-native-screens\n        Platform.OS === 'ios' && SearchBar != null;\n\n  const hasHeaderSearchBar =\n    supportsHeaderSearchBar && headerSearchBarOptions != null;\n\n  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {\n    throw new Error(\n      `The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.`\n    );\n  }\n\n  /**\n   * We need to set this in if:\n   * - Back button should stay visible when `headerLeft` is specified\n   * - If `headerTitle` for Android is specified, so we only need to remove the title and keep the back button\n   */\n  const backButtonInCustomView = headerBackVisible\n    ? headerLeftElement != null\n    : Platform.OS === 'android' && headerTitleElement != null;\n\n  const translucent =\n    headerBackground != null ||\n    headerTransparent ||\n    // When using a SearchBar or large title, the header needs to be translucent for it to work on iOS\n    ((hasHeaderSearchBar || headerLargeTitle) &&\n      Platform.OS === 'ios' &&\n      headerTransparent !== false);\n\n  return (\n    <>\n      {headerBackground != null ? (\n        <View\n          style={[\n            styles.background,\n            headerTransparent ? styles.translucent : null,\n            { height: headerHeight },\n          ]}\n        >\n          {headerBackground()}\n        </View>\n      ) : null}\n      <ScreenStackHeaderConfig\n        backButtonInCustomView={backButtonInCustomView}\n        backgroundColor={\n          headerStyleFlattened.backgroundColor ??\n          (headerBackground != null || headerTransparent\n            ? 'transparent'\n            : colors.card)\n        }\n        backTitle={headerBackTitleVisible ? headerBackTitle : ' '}\n        backTitleFontFamily={backTitleFontFamily}\n        backTitleFontSize={headerBackTitleStyleFlattened.fontSize}\n        blurEffect={headerBlurEffect}\n        color={tintColor}\n        direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n        disableBackButtonMenu={headerBackButtonMenuEnabled === false}\n        hidden={headerShown === false}\n        hideBackButton={headerBackVisible === false}\n        hideShadow={\n          headerShadowVisible === false ||\n          headerBackground != null ||\n          (headerTransparent && headerShadowVisible !== true)\n        }\n        largeTitle={headerLargeTitle}\n        largeTitleBackgroundColor={headerLargeStyleFlattened.backgroundColor}\n        largeTitleColor={headerLargeTitleStyleFlattened.color}\n        largeTitleFontFamily={largeTitleFontFamily}\n        largeTitleFontSize={headerLargeTitleStyleFlattened.fontSize}\n        largeTitleFontWeight={headerLargeTitleStyleFlattened.fontWeight}\n        largeTitleHideShadow={headerLargeTitleShadowVisible === false}\n        title={titleText}\n        titleColor={titleColor}\n        titleFontFamily={titleFontFamily}\n        titleFontSize={titleFontSize}\n        titleFontWeight={titleFontWeight}\n        topInsetEnabled={headerTopInsetEnabled}\n        translucent={\n          // This defaults to `true`, so we can't pass `undefined`\n          translucent === true\n        }\n      >\n        {Platform.OS === 'ios' ? (\n          <>\n            {headerLeftElement != null ? (\n              <ScreenStackHeaderLeftView>\n                {headerLeftElement}\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleElement != null ? (\n              <ScreenStackHeaderCenterView>\n                {headerTitleElement}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        ) : (\n          <>\n            {headerLeftElement != null || typeof headerTitle === 'function' ? (\n              <ScreenStackHeaderLeftView>\n                <View style={styles.row}>\n                  {headerLeftElement}\n                  {headerTitleAlign !== 'center' ? (\n                    typeof headerTitle === 'function' ? (\n                      headerTitleElement\n                    ) : (\n                      <HeaderTitle\n                        tintColor={tintColor}\n                        style={headerTitleStyleSupported}\n                      >\n                        {titleText}\n                      </HeaderTitle>\n                    )\n                  ) : null}\n                </View>\n              </ScreenStackHeaderLeftView>\n            ) : null}\n            {headerTitleAlign === 'center' ? (\n              <ScreenStackHeaderCenterView>\n                {typeof headerTitle === 'function' ? (\n                  headerTitleElement\n                ) : (\n                  <HeaderTitle\n                    tintColor={tintColor}\n                    style={headerTitleStyleSupported}\n                  >\n                    {titleText}\n                  </HeaderTitle>\n                )}\n              </ScreenStackHeaderCenterView>\n            ) : null}\n          </>\n        )}\n        {headerBackImageSource !== undefined ? (\n          <ScreenStackHeaderBackButtonImage source={headerBackImageSource} />\n        ) : null}\n        {headerRightElement != null ? (\n          <ScreenStackHeaderRightView>\n            {headerRightElement}\n          </ScreenStackHeaderRightView>\n        ) : null}\n        {hasHeaderSearchBar ? (\n          <ScreenStackHeaderSearchBarView>\n            <SearchBar {...headerSearchBarOptions} />\n          </ScreenStackHeaderSearchBarView>\n        ) : null}\n      </ScreenStackHeaderConfig>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  translucent: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 1,\n  },\n  background: {\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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"}