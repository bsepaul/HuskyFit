{"version":3,"names":["isAndroid","Platform","OS","MaybeNestedStack","options","route","presentation","headerHeight","headerTopInsetEnabled","children","colors","useTheme","header","headerShown","contentStyle","isHeaderInModal","undefined","headerShownPreviousRef","React","useRef","useEffect","warnOnce","current","name","content","styles","container","backgroundColor","background","StyleSheet","absoluteFill","SceneView","index","focused","descriptor","previousDescriptor","nextDescriptor","onWillDisappear","onAppear","onDisappear","onDismissed","onHeaderBackButtonClicked","onNativeDismissCancelled","navigation","render","animationDuration","animationTypeForReplace","gestureEnabled","headerBackButtonMenuEnabled","headerTransparent","autoHideHomeIndicator","navigationBarColor","navigationBarHidden","orientation","statusBarAnimation","statusBarHidden","statusBarStyle","statusBarTranslucent","statusBarColor","freezeOnBlur","animation","customAnimationOnGesture","fullScreenGestureEnabled","gestureDirection","nextGestureDirection","gestureDirectionOverride","insets","useSafeAreaInsets","frame","useSafeAreaFrame","isModal","isIPhone","isPad","isTV","isLandscape","width","height","isParentHeaderShown","useContext","HeaderShownContext","parentHeaderHeight","HeaderHeightContext","parentHeaderBack","HeaderBackContext","topInset","top","preventedRoutes","usePreventRemoveContext","defaultHeaderHeight","getDefaultHeaderHeight","customHeaderHeight","setCustomHeaderHeight","useState","headerBack","title","getHeaderTitle","isRemovePrevented","key","preventRemove","headerBackTitle","scene","e","nativeEvent","layout","absolute","back","NativeStackViewInner","state","descriptors","setNextDismissedKey","useDismissedRouteError","useInvalidPreventRemoveError","routes","map","isFocused","previousKey","nextKey","emit","type","data","closing","target","event","dispatch","StackActions","pop","dismissCount","source","NativeStackView","props","create","flex","flexDirection","position","left","right"],"sources":["NativeStackView.native.tsx"],"sourcesContent":["import {\n  getDefaultHeaderHeight,\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n  usePreventRemoveContext,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport type { ScreenProps } from 'react-native-screens';\nimport {\n  Screen,\n  ScreenStack,\n  StackPresentationTypes,\n} from 'react-native-screens';\nimport warnOnce from 'warn-once';\n\nimport type {\n  NativeStackDescriptor,\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n  NativeStackNavigationOptions,\n} from '../types';\nimport useDismissedRouteError from '../utils/useDismissedRouteError';\nimport useInvalidPreventRemoveError from '../utils/useInvalidPreventRemoveError';\nimport DebugContainer from './DebugContainer';\nimport HeaderConfig from './HeaderConfig';\n\nconst isAndroid = Platform.OS === 'android';\n\nconst MaybeNestedStack = ({\n  options,\n  route,\n  presentation,\n  headerHeight,\n  headerTopInsetEnabled,\n  children,\n}: {\n  options: NativeStackNavigationOptions;\n  route: Route<string>;\n  presentation: Exclude<StackPresentationTypes, 'push'> | 'card';\n  headerHeight: number;\n  headerTopInsetEnabled: boolean;\n  children: React.ReactNode;\n}) => {\n  const { colors } = useTheme();\n  const { header, headerShown = true, contentStyle } = options;\n\n  const isHeaderInModal = isAndroid\n    ? false\n    : presentation !== 'card' && headerShown === true && header === undefined;\n\n  const headerShownPreviousRef = React.useRef(headerShown);\n\n  React.useEffect(() => {\n    warnOnce(\n      !isAndroid &&\n        presentation !== 'card' &&\n        headerShownPreviousRef.current !== headerShown,\n      `Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '${route.name}'.`\n    );\n\n    headerShownPreviousRef.current = headerShown;\n  }, [headerShown, presentation, route.name]);\n\n  const content = (\n    <DebugContainer\n      style={[\n        styles.container,\n        presentation !== 'transparentModal' &&\n          presentation !== 'containedTransparentModal' && {\n            backgroundColor: colors.background,\n          },\n        contentStyle,\n      ]}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n    >\n      {children}\n    </DebugContainer>\n  );\n\n  if (isHeaderInModal) {\n    return (\n      <ScreenStack style={styles.container}>\n        <Screen enabled style={StyleSheet.absoluteFill}>\n          <HeaderConfig\n            {...options}\n            route={route}\n            headerHeight={headerHeight}\n            headerTopInsetEnabled={headerTopInsetEnabled}\n            canGoBack\n          />\n          {content}\n        </Screen>\n      </ScreenStack>\n    );\n  }\n\n  return content;\n};\n\ntype SceneViewProps = {\n  index: number;\n  focused: boolean;\n  descriptor: NativeStackDescriptor;\n  previousDescriptor?: NativeStackDescriptor;\n  nextDescriptor?: NativeStackDescriptor;\n  onWillDisappear: () => void;\n  onAppear: () => void;\n  onDisappear: () => void;\n  onDismissed: ScreenProps['onDismissed'];\n  onHeaderBackButtonClicked: ScreenProps['onHeaderBackButtonClicked'];\n  onNativeDismissCancelled: ScreenProps['onDismissed'];\n};\n\nconst SceneView = ({\n  index,\n  focused,\n  descriptor,\n  previousDescriptor,\n  nextDescriptor,\n  onWillDisappear,\n  onAppear,\n  onDisappear,\n  onDismissed,\n  onHeaderBackButtonClicked,\n  onNativeDismissCancelled,\n}: SceneViewProps) => {\n  const { route, navigation, options, render } = descriptor;\n  const {\n    animationDuration,\n    animationTypeForReplace = 'push',\n    gestureEnabled,\n    header,\n    headerBackButtonMenuEnabled,\n    headerShown,\n    headerTransparent,\n    autoHideHomeIndicator,\n    navigationBarColor,\n    navigationBarHidden,\n    orientation,\n    statusBarAnimation,\n    statusBarHidden,\n    statusBarStyle,\n    statusBarTranslucent,\n    statusBarColor,\n    freezeOnBlur,\n  } = options;\n\n  let {\n    animation,\n    customAnimationOnGesture,\n    fullScreenGestureEnabled,\n    presentation = 'card',\n    gestureDirection = presentation === 'card' ? 'horizontal' : 'vertical',\n  } = options;\n\n  if (gestureDirection === 'vertical' && Platform.OS === 'ios') {\n    // for `vertical` direction to work, we need to set `fullScreenGestureEnabled` to `true`\n    // so the screen can be dismissed from any point on screen.\n    // `customAnimationOnGesture` needs to be set to `true` so the `animation` set by user can be used,\n    // otherwise `simple_push` will be used.\n    // Also, the default animation for this direction seems to be `slide_from_bottom`.\n    if (fullScreenGestureEnabled === undefined) {\n      fullScreenGestureEnabled = true;\n    }\n    if (customAnimationOnGesture === undefined) {\n      customAnimationOnGesture = true;\n    }\n    if (animation === undefined) {\n      animation = 'slide_from_bottom';\n    }\n  }\n\n  // workaround for rn-screens where gestureDirection has to be set on both\n  // current and previous screen - software-mansion/react-native-screens/pull/1509\n  const nextGestureDirection = nextDescriptor?.options.gestureDirection;\n  const gestureDirectionOverride =\n    nextGestureDirection != null ? nextGestureDirection : gestureDirection;\n\n  if (index === 0) {\n    // first screen should always be treated as `card`, it resolves problems with no header animation\n    // for navigator with first screen as `modal` and the next as `card`\n    presentation = 'card';\n  }\n\n  const insets = useSafeAreaInsets();\n  const frame = useSafeAreaFrame();\n\n  // `modal` and `formSheet` presentations do not take whole screen, so should not take the inset.\n  const isModal = presentation === 'modal' || presentation === 'formSheet';\n\n  // Modals are fullscreen in landscape only on iPhone\n  const isIPhone = Platform.OS === 'ios' && !(Platform.isPad || Platform.isTV);\n  const isLandscape = frame.width > frame.height;\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  const topInset =\n    isParentHeaderShown ||\n    (Platform.OS === 'ios' && isModal) ||\n    (isIPhone && isLandscape)\n      ? 0\n      : insets.top;\n\n  const { preventedRoutes } = usePreventRemoveContext();\n\n  const defaultHeaderHeight = getDefaultHeaderHeight(frame, isModal, topInset);\n\n  const [customHeaderHeight, setCustomHeaderHeight] =\n    React.useState(defaultHeaderHeight);\n\n  const headerTopInsetEnabled = topInset !== 0;\n  const headerHeight = header ? customHeaderHeight : defaultHeaderHeight;\n  const headerBack = previousDescriptor\n    ? {\n        title: getHeaderTitle(\n          previousDescriptor.options,\n          previousDescriptor.route.name\n        ),\n      }\n    : parentHeaderBack;\n\n  const isRemovePrevented = preventedRoutes[route.key]?.preventRemove;\n\n  return (\n    <Screen\n      key={route.key}\n      enabled\n      style={StyleSheet.absoluteFill}\n      customAnimationOnSwipe={customAnimationOnGesture}\n      fullScreenSwipeEnabled={fullScreenGestureEnabled}\n      gestureEnabled={\n        isAndroid\n          ? // This prop enables handling of system back gestures on Android\n            // Since we handle them in JS side, we disable this\n            false\n          : gestureEnabled\n      }\n      homeIndicatorHidden={autoHideHomeIndicator}\n      navigationBarColor={navigationBarColor}\n      navigationBarHidden={navigationBarHidden}\n      replaceAnimation={animationTypeForReplace}\n      stackPresentation={presentation === 'card' ? 'push' : presentation}\n      stackAnimation={animation}\n      screenOrientation={orientation}\n      statusBarAnimation={statusBarAnimation}\n      statusBarHidden={statusBarHidden}\n      statusBarStyle={statusBarStyle}\n      statusBarColor={statusBarColor}\n      statusBarTranslucent={statusBarTranslucent}\n      swipeDirection={gestureDirectionOverride}\n      transitionDuration={animationDuration}\n      onWillDisappear={onWillDisappear}\n      onAppear={onAppear}\n      onDisappear={onDisappear}\n      onDismissed={onDismissed}\n      isNativeStack\n      nativeBackButtonDismissalEnabled={false} // on Android\n      onHeaderBackButtonClicked={onHeaderBackButtonClicked}\n      // @ts-ignore props not exported from rn-screens\n      preventNativeDismiss={isRemovePrevented} // on iOS\n      onNativeDismissCancelled={onNativeDismissCancelled}\n      // this prop is available since rn-screens 3.16\n      freezeOnBlur={freezeOnBlur}\n    >\n      <NavigationContext.Provider value={navigation}>\n        <NavigationRouteContext.Provider value={route}>\n          <HeaderShownContext.Provider\n            value={isParentHeaderShown || headerShown !== false}\n          >\n            <HeaderHeightContext.Provider\n              value={\n                headerShown !== false ? headerHeight : parentHeaderHeight ?? 0\n              }\n            >\n              {/**\n               * `HeaderConfig` needs to be the direct child of `Screen` without any intermediate `View`\n               * We don't render it conditionally to make it possible to dynamically render a custom `header`\n               * Otherwise dynamically rendering a custom `header` leaves the native header visible\n               *\n               * https://github.com/software-mansion/react-native-screens/blob/main/guides/GUIDE_FOR_LIBRARY_AUTHORS.md#screenstackheaderconfig\n               */}\n              <HeaderConfig\n                {...options}\n                route={route}\n                headerBackButtonMenuEnabled={\n                  isRemovePrevented !== undefined\n                    ? !isRemovePrevented\n                    : headerBackButtonMenuEnabled\n                }\n                headerShown={header !== undefined ? false : headerShown}\n                headerHeight={headerHeight}\n                headerBackTitle={\n                  options.headerBackTitle !== undefined\n                    ? options.headerBackTitle\n                    : undefined\n                }\n                headerTopInsetEnabled={headerTopInsetEnabled}\n                canGoBack={headerBack !== undefined}\n              />\n              <View\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={styles.scene}\n              >\n                <MaybeNestedStack\n                  options={options}\n                  route={route}\n                  presentation={presentation}\n                  headerHeight={headerHeight}\n                  headerTopInsetEnabled={headerTopInsetEnabled}\n                >\n                  <HeaderBackContext.Provider value={headerBack}>\n                    {render()}\n                  </HeaderBackContext.Provider>\n                </MaybeNestedStack>\n                {header !== undefined && headerShown !== false ? (\n                  <View\n                    onLayout={(e) => {\n                      setCustomHeaderHeight(e.nativeEvent.layout.height);\n                    }}\n                    style={headerTransparent ? styles.absolute : null}\n                  >\n                    {header({\n                      back: headerBack,\n                      options,\n                      route,\n                      navigation,\n                    })}\n                  </View>\n                ) : null}\n              </View>\n            </HeaderHeightContext.Provider>\n          </HeaderShownContext.Provider>\n        </NavigationRouteContext.Provider>\n      </NavigationContext.Provider>\n    </Screen>\n  );\n};\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nfunction NativeStackViewInner({ state, navigation, descriptors }: Props) {\n  const { setNextDismissedKey } = useDismissedRouteError(state);\n\n  useInvalidPreventRemoveError(descriptors);\n\n  return (\n    <ScreenStack style={styles.container}>\n      {state.routes.map((route, index) => {\n        const descriptor = descriptors[route.key];\n        const isFocused = state.index === index;\n        const previousKey = state.routes[index - 1]?.key;\n        const nextKey = state.routes[index + 1]?.key;\n        const previousDescriptor = previousKey\n          ? descriptors[previousKey]\n          : undefined;\n        const nextDescriptor = nextKey ? descriptors[nextKey] : undefined;\n\n        return (\n          <SceneView\n            key={route.key}\n            index={index}\n            focused={isFocused}\n            descriptor={descriptor}\n            previousDescriptor={previousDescriptor}\n            nextDescriptor={nextDescriptor}\n            onWillDisappear={() => {\n              navigation.emit({\n                type: 'transitionStart',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onAppear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: false },\n                target: route.key,\n              });\n            }}\n            onDisappear={() => {\n              navigation.emit({\n                type: 'transitionEnd',\n                data: { closing: true },\n                target: route.key,\n              });\n            }}\n            onDismissed={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n\n              setNextDismissedKey(route.key);\n            }}\n            onHeaderBackButtonClicked={() => {\n              navigation.dispatch({\n                ...StackActions.pop(),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n            onNativeDismissCancelled={(event) => {\n              navigation.dispatch({\n                ...StackActions.pop(event.nativeEvent.dismissCount),\n                source: route.key,\n                target: state.key,\n              });\n            }}\n          />\n        );\n      })}\n    </ScreenStack>\n  );\n}\n\nexport default function NativeStackView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <NativeStackViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  scene: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"}