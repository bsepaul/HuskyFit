{"version":3,"names":["useRegisterNavigator","key","React","useState","nanoid","container","useContext","SingleNavigatorContext","undefined","Error","useEffect","register","unregister"],"sources":["useRegisterNavigator.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport * as React from 'react';\n\nimport { SingleNavigatorContext } from './EnsureSingleNavigator';\n\n/**\n * Register a navigator in the parent context (either a navigation container or a screen).\n * This is used to prevent multiple navigators under a single container or screen.\n */\nexport default function useRegisterNavigator() {\n  const [key] = React.useState(() => nanoid());\n  const container = React.useContext(SingleNavigatorContext);\n\n  if (container === undefined) {\n    throw new Error(\n      \"Couldn't register the navigator. Have you wrapped your app with 'NavigationContainer'?\\n\\nThis can also happen if there are multiple copies of '@react-navigation' packages installed.\"\n    );\n  }\n\n  React.useEffect(() => {\n    const { register, unregister } = container;\n\n    register(key);\n\n    return () => unregister(key);\n  }, [container, key]);\n\n  return key;\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;AAEA;AACA;AACA;AACA;AACe,SAASA,oBAAT,GAAgC;EAC7C,MAAM,CAACC,GAAD,IAAQC,KAAK,CAACC,QAAN,CAAe,MAAM,IAAAC,iBAAA,GAArB,CAAd;EACA,MAAMC,SAAS,GAAGH,KAAK,CAACI,UAAN,CAAiBC,6CAAjB,CAAlB;;EAEA,IAAIF,SAAS,KAAKG,SAAlB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CACJ,wLADI,CAAN;EAGD;;EAEDP,KAAK,CAACQ,SAAN,CAAgB,MAAM;IACpB,MAAM;MAAEC,QAAF;MAAYC;IAAZ,IAA2BP,SAAjC;IAEAM,QAAQ,CAACV,GAAD,CAAR;IAEA,OAAO,MAAMW,UAAU,CAACX,GAAD,CAAvB;EACD,CAND,EAMG,CAACI,SAAD,EAAYJ,GAAZ,CANH;EAQA,OAAOA,GAAP;AACD"}