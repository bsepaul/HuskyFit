{"version":3,"names":["Link","useTheme","Color","React","Platform","Pressable","StyleSheet","Text","TabBarIcon","BottomTabBarItem","focused","route","descriptor","label","icon","badge","badgeStyle","to","button","children","style","onPress","accessibilityRole","rest","OS","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","accessibilityLabel","testID","onLongPress","horizontal","activeTintColor","customActiveTintColor","inactiveTintColor","customInactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","color","labelBeside","labelBeneath","options","tabBarLabel","title","name","position","renderIcon","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"sources":["BottomTabItem.tsx"],"sourcesContent":["import { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport type {\n  BottomTabBarButtonProps,\n  BottomTabDescriptor,\n  LabelPosition,\n} from '../types';\nimport TabBarIcon from './TabBarIcon';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The descriptor object for the route.\n   */\n  descriptor: BottomTabDescriptor;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n        children: string;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * Custom style for the badge.\n   */\n  badgeStyle?: StyleProp<TextStyle>;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  descriptor,\n  label,\n  icon,\n  badge,\n  badgeStyle,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <Pressable\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n          style={style}\n        >\n          {children}\n        </Pressable>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Text>\n      );\n    }\n\n    const { options } = descriptor;\n    const children =\n      typeof options.tabBarLabel === 'string'\n        ? options.tabBarLabel\n        : options.title !== undefined\n        ? options.title\n        : route.name;\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children,\n    });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        badgeStyle={badgeStyle}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({ ios: 'button', default: 'tab' }),\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"],"mappings":"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"}