{"version":3,"names":["useIsKeyboardShown","isKeyboardShown","setIsKeyboardShown","React","useState","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","Platform","OS","Keyboard","addListener","forEach","s","remove"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEe,SAASA,kBAAT,GAA8B;EAC3C,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,KAAK,CAACC,QAAN,CAAe,KAAf,CAA9C;EAEAD,KAAK,CAACE,SAAN,CAAgB,MAAM;IACpB,MAAMC,kBAAkB,GAAG,MAAMJ,kBAAkB,CAAC,IAAD,CAAnD;;IACA,MAAMK,kBAAkB,GAAG,MAAML,kBAAkB,CAAC,KAAD,CAAnD;;IAEA,IAAIM,aAAJ;;IAEA,IAAIC,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MACzBF,aAAa,GAAG,CACdG,qBAAA,CAASC,WAAT,CAAqB,kBAArB,EAAyCN,kBAAzC,CADc,EAEdK,qBAAA,CAASC,WAAT,CAAqB,kBAArB,EAAyCL,kBAAzC,CAFc,CAAhB;IAID,CALD,MAKO;MACLC,aAAa,GAAG,CACdG,qBAAA,CAASC,WAAT,CAAqB,iBAArB,EAAwCN,kBAAxC,CADc,EAEdK,qBAAA,CAASC,WAAT,CAAqB,iBAArB,EAAwCL,kBAAxC,CAFc,CAAhB;IAID;;IAED,OAAO,MAAM;MACXC,aAAa,CAACK,OAAd,CAAuBC,CAAD,IAAOA,CAAC,CAACC,MAAF,EAA7B;IACD,CAFD;EAGD,CArBD,EAqBG,EArBH;EAuBA,OAAOd,eAAP;AACD"}