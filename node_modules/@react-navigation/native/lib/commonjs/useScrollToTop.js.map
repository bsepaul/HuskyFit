{"version":3,"names":["getScrollableNode","ref","current","getScrollResponder","getNode","useScrollToTop","navigation","useNavigation","route","useRoute","React","useEffect","tabNavigations","currentNavigation","getState","type","push","getParent","length","unsubscribers","map","tab","addListener","e","isFocused","isFirst","includes","routes","key","requestAnimationFrame","scrollable","defaultPrevented","scrollToTop","scrollTo","y","animated","scrollToOffset","offset","scrollResponderScrollTo","forEach","unsubscribe"],"sources":["useScrollToTop.tsx"],"sourcesContent":["import { EventArg, NavigationProp, useNavigation, useRoute } from '@react-navigation/core';\nimport * as React from 'react';\n\ntype ScrollOptions = { x?: number; y?: number; animated?: boolean };\n\ntype ScrollableView =\n  | { scrollToTop(): void }\n  | { scrollTo(options: ScrollOptions): void }\n  | { scrollToOffset(options: { offset?: number; animated?: boolean }): void }\n  | { scrollResponderScrollTo(options: ScrollOptions): void };\n\ntype ScrollableWrapper =\n  | { getScrollResponder(): React.ReactNode }\n  | { getNode(): ScrollableView }\n  | ScrollableView;\n\nfunction getScrollableNode(ref: React.RefObject<ScrollableWrapper>) {\n  if (ref.current == null) {\n    return null;\n  }\n\n  if (\n    'scrollToTop' in ref.current ||\n    'scrollTo' in ref.current ||\n    'scrollToOffset' in ref.current ||\n    'scrollResponderScrollTo' in ref.current\n  ) {\n    // This is already a scrollable node.\n    return ref.current;\n  } else if ('getScrollResponder' in ref.current) {\n    // If the view is a wrapper like FlatList, SectionList etc.\n    // We need to use `getScrollResponder` to get access to the scroll responder\n    return ref.current.getScrollResponder();\n  } else if ('getNode' in ref.current) {\n    // When a `ScrollView` is wraped in `Animated.createAnimatedComponent`\n    // we need to use `getNode` to get the ref to the actual scrollview.\n    // Note that `getNode` is deprecated in newer versions of react-native\n    // this is why we check if we already have a scrollable node above.\n    return ref.current.getNode();\n  } else {\n    return ref.current;\n  }\n}\n\nexport default function useScrollToTop(\n  ref: React.RefObject<ScrollableWrapper>\n) {\n  const navigation = useNavigation();\n  const route = useRoute();\n\n  React.useEffect(() => {\n    let tabNavigations: NavigationProp<ReactNavigation.RootParamList>[] = [];\n    let currentNavigation = navigation;\n\n    // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n    // So we need to find all the parent tab navigators and add the listeners there\n    while (currentNavigation) {\n      if (currentNavigation.getState().type === 'tab') {\n        tabNavigations.push(currentNavigation);\n      }\n\n      currentNavigation = currentNavigation.getParent();\n    }\n\n    if (tabNavigations.length === 0) {\n      return;\n    }\n\n    const unsubscribers = tabNavigations.map((tab) => {\n      return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error\n        'tabPress',\n        (e: EventArg<'tabPress', true>) => {\n          // We should scroll to top only when the screen is focused\n          const isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          const isFirst =\n            tabNavigations.includes(navigation) ||\n            navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            const scrollable = getScrollableNode(ref) as ScrollableWrapper;\n\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({ y: 0, animated: true });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({ offset: 0, animated: true });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({ y: 0, animated: true });\n              }\n            }\n          });\n        }\n      );\n    });\n\n    return () => {\n      unsubscribers.forEach((unsubscribe) => unsubscribe());\n    };\n  }, [navigation, ref, route.key]);\n}\n"],"mappings":"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"}